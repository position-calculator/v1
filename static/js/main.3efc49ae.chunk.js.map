{"version":3,"sources":["components/Input/Input.jsx","main-components/Calculator/constants.js","main-components/Calculator/hooks/useCalculator.js","main-components/Calculator/useStyles.js","main-components/Calculator/Calculator.jsx","main-components/PositionValues/PositionValues.jsx","App.js","serviceWorker.js","index.js"],"names":["Input","value","onChange","label","labelWidth","sign","className","FormControl","variant","InputLabel","htmlFor","color","OutlinedInput","id","startAdornment","InputAdornment","position","required","type","INITIAL_STATE","risk","balance","stopLoss","takeProfit","useCalculator","useState","constants","values","setValues","handleChange","prop","event","persist","prevValues","target","isAllInputsFulfilled","Object","every","useStyles","makeStyles","theme","paper","width","padding","display","flexDirection","justifyContent","alignItems","headline","marginBottom","input","margin","spacing","button","height","Calculator","saveValues","classes","Paper","Typography","Button","disableElevation","onClick","disabled","fontWeight","createData","PositionValues","React","forwardRef","ref","positionValues","leverage","riskRatio","balanceWithLeverage","possibleProfit","possibleLoss","toFixed","generatePositionViewData","TableContainer","component","Table","table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","scope","root","minHeight","App","Boolean","window","location","hostname","match","createMuiTheme","palette","background","default","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3efc49ae.chunk.js","sourcesContent":["import React from 'react';\nimport { FormControl, InputLabel, OutlinedInput, InputAdornment } from '@material-ui/core';\n\nconst Input = ({ value, onChange, label, labelWidth, sign, className }) => (\n  <FormControl className={className} variant=\"outlined\">\n    <InputLabel htmlFor=\"outlined-adornment-amount\" color='secondary'>{label}</InputLabel>\n    <OutlinedInput\n      id=\"outlined-adornment-amount\"\n      value={value}\n      onChange={onChange}\n      startAdornment={<InputAdornment position=\"start\">{sign}</InputAdornment>}\n      labelWidth={labelWidth}\n      required\n      color='secondary'\n      type='number'\n    />\n  </FormControl>\n);\n\nexport default Input;\n","export const INITIAL_STATE = {\n  risk: '1',\n  balance: '10000',\n  stopLoss: '0.35',\n  takeProfit: '2',\n};","import { useState } from 'react';\n\nimport * as constants from '../constants';\n\nconst useCalculator = () => {\n  const [values, setValues] = useState(constants.INITIAL_STATE);\n\n  const handleChange = prop => event => {\n    event.persist();\n\n    setValues(prevValues => ({ ...prevValues, [prop]: event.target.value }));\n  };\n\n  const isAllInputsFulfilled = Object.values(values).every(value => !!value);\n\n  return { values, handleChange, isAllInputsFulfilled };\n};\n\nexport default useCalculator;\n","import { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    width: '400px',\n    padding: '15px 0',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headline: {\n    marginBottom: '15px',\n  },\n  input: {\n    margin: theme.spacing(2),\n    width: '350px'\n  },\n  button: {\n    width: '350px',\n    height: '45px',\n    margin: theme.spacing(2),\n  }\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { Button, Paper, Typography } from '@material-ui/core';\n\nimport { Input } from '../../components';\n\nimport { useCalculator } from './hooks';\nimport useStyles from './useStyles';\n\nconst Calculator = ({ saveValues }) => {\n  const { values, handleChange, isAllInputsFulfilled } = useCalculator();\n\n  const classes = useStyles();\n\n  const handleClick = () => saveValues(values);\n\n  return (\n    <Paper className={classes.paper}>\n    <Typography className={classes.headline} variant='h5'>Calculator</Typography>\n      <Input\n        onChange={handleChange('risk')}\n        value={values.risk}\n        label='Risk per position'\n        className={classes.input}\n        labelWidth={125}\n        sign='%'\n      />\n      <Input\n        onChange={handleChange('balance')}\n        value={values.balance}\n        label='Balance'\n        className={classes.input}\n        labelWidth={65}\n        sign='$'\n      />\n      <Input\n        onChange={handleChange('stopLoss')}\n        value={values.stopLoss}\n        label='Stop loss'\n        className={classes.input}\n        labelWidth={75}\n        sign='%'\n      />\n      <Input\n        onChange={handleChange('takeProfit')}\n        value={values.takeProfit}\n        label='Take profit'\n        className={classes.input}\n        labelWidth={85}\n        sign='%'\n      />\n      <Button\n        variant=\"contained\"\n        disableElevation\n        color='secondary'\n        onClick={handleClick}\n        disabled={!isAllInputsFulfilled}\n        className={classes.button}\n      >\n        Calculate\n      </Button>\n    </Paper>\n  );\n};\n\nexport default Calculator;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  paper: {\n    width: 350,\n    margin: 20\n  },\n  value: {\n    fontWeight: 'bold',\n  }\n});\n\nconst createData = (label, value) => ({ label, value });\n\nconst generatePositionViewData = (values) => {\n  const leverage = values ? values.risk / values.stopLoss : 0;\n  const riskRatio = values ? values.takeProfit / values.stopLoss : 0;\n  const balanceWithLeverage = values ? values.balance * leverage : 0;\n  const possibleProfit = values ? (balanceWithLeverage * values.takeProfit) / 100 : 0;\n  const possibleLoss = values ? (balanceWithLeverage * values.stopLoss) / 100 : 0;\n\n  return [\n    createData('Risk ratio', riskRatio ? `${riskRatio.toFixed(2)} : 1` : 0.0.toFixed(2)),\n    createData('Max leverage', leverage.toFixed(2)),\n    createData('Balance with leverage', `$${balanceWithLeverage.toFixed(2)}`),\n    createData('Possible loss', `$${possibleLoss.toFixed(2)}`),\n    createData('Possible profit', `$${possibleProfit.toFixed(2)}`),\n  ];\n};\n\nconst PositionValues = React.forwardRef(({ values }, ref) => {\n  const classes = useStyles();\n\n  const positionValues = generatePositionViewData(values);\n\n  return (\n    <TableContainer className={classes.paper} ref={ref} component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Stat</TableCell>\n            <TableCell align='right'>Value</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {positionValues.map((row) => (\n            <TableRow key={row.label}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.label}\n              </TableCell>\n              <TableCell className={classes.value} align='right'>{row.value}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n});\n\nexport default PositionValues;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport { Calculator, PositionValues } from './main-components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100vh',\n    minHeight: '900px',\n    alignItems: 'center',\n  },\n}));\n\nconst App = () => {\n  const [values, setValues] = useState(null);\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Calculator saveValues={setValues} />\n      <PositionValues values={values} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      default: '#262626',\n    },\n    type: 'dark',\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}